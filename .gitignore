# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# next.js build output
.next


# ----------------------------------------RANDOM LEFTOVER CODE THAT COULD POTENTIALY BE USED -----------------------------------------------------------------------------------------


//creating rooms and player: classes, groups and arrays; week 2 objects method, slide 2- and OsJs slide 9 = definition 

//Satchel is where you'll find what player has picked up 
class Satchel {constructor(){}}

//creating rooms
class anteChamber{
  constructor(darkHall, brightHall, stairs, sign,door1, door2){
    this.darkHall = darkHall
    this.brightHall = brightHall
    this.stairs = this.stairs
    this.sign = sign
    this.door1 = door1
    this.door2 = door2
  }//objects player must pick up
class grabIt{
  constructor(stick, hammer){
    this.stick=stick
    this.hammer=hammer
  }
}
//Objects player can pickup but must leave there
class moveableObjects{
  constructor(spiders)
  {This.spider=spider
  }
}
class dropped{constructor(stick, hammer)
  {this.stick=stick
  this.hammer=hammer
  }
}
  let sign = {
  description: "The code to enter is 1234.\nEnter at your own risk. ",
  read: () => {
  return this.description
  }
  }
  
  
  
  //entering first rm

  console.log("You have entered the Antechamber you have three choices where to go.\n To the left is a nice sunny lit hallway with people working in their offices.\n to the right is a dark dreary hallway with cobwebs covering the entrance.\n Straight ahead is a huge marble staircase that has been roped off with a sign that reads AUTHORIZED PERSONNEL ONLY.\n Which way will you choose?/n Left, Right or straight/n Meanwhile, you heard the door lock behind you")
  //function lockDoor {}
  
direction; amait.ask("left, right or straight")
  let (left === brightHall, right === darkHall, straight === stairs)
if (left) {console.log("you are standing at the entrance to the brigthly lit hallway/n you hear people workingbut you remember/n It was dark outside, so where is the sun doming from?, /n DO YOU ENTER/n Yes or No?")}



//creating rooms and player: 
class Satchel{ 
  constructor(weapon1){
     this.weapon1 = weapon1;
  }
}
class antechamber{
  constructor(darkHall, brightHall, stairs, sign, inventory){
    this.darkHall = darkHall;
    this.brightHall = brightHall;
    this.stairs = stairs;
    this.sign = sign;
    this.inventory = inventory;
  }
}
class action{
    constructor(read, take, drop, open, move, climb, enter, out, jump, listen, right, left, forward, back){
      this.read = read;
      this.take = take;
      this.drop = drop;
      this.open = open;
      this.move = move;
      this.climb = climb;
      this.enter = enter;
      this.out = out;
      this.jump = jump;
      this.listen = listen;
      this.right = right;
      this.left = left;
      this.forward = forward;
      this.back = back;

    }
  }
  if (command === inventory || command === i || command === 'take inventory');
   
//describe(){
// return
//}
//let myRoom = new Room("")

//console.log(myRoom.describe())   
 // )}



// put in or remove from satchel; week 2 slide 12 - 
if (drop === stick ||drop === hammer){push}
if (grabIt === stick ||drop === hammer) {console.log('good move'), satchel.push
}
else( ) => {console.log ('you might need that stick for later\n I am just saying all it takes is to spellout /n stick /n or /n hammer')
}

start ()
//Self explanitory
console.log("welcome to Nick's Jack's Likely Unfinished Game\n \n");

console.log("Have the Time Of Your Life!!");

let anteChamber = ["stairCase", "darkHall", "brightHall", "sign"]
;
    
let study = ["books", "spiders", "redCarpet", "door", "door"];
    let sachel = [""]



    const { Console } = require("console");
const readline = require("readline");
const { start } = require("repl");
const readlineInterface = readline.createInterface(
  process.stdin,
  process.stdout
);

function ask(questionText) {
  return new Promise((resolve, reject) => {
    readlineInterface.question(questionText, resolve);
  });
}
let userName = "player"
let stick = toString.weapon
let hammer = toString.weapon2
let satchel = {'size':'large', 'color':'tan', 'material':'goatSkin'}
let inSatchel ={'nothing':'air'}

start (),

async function enter 
  
console.log('you check the door and it is unlocked')


const { exit } = require("process");
const readline = require("readline");
const r1 = readline.createInterface(process.stdin, process.stdout);

function ask(questionText) {
   return new Promise ((resolve, reject) => {
      r1.question(questionText, resolve);
  });
}


start ()

async function start() {
  console.log ('`It’s a dark damp night and you are on the road out in front of 182 Main St. and you swear you heard a soft whisper.\n\nWould you like to play a game?\n\nYou think maybe that was just a thought in your head.\n \nYou need to decide')
  let answer1 = await ask ("/nHave you decided?\n\nONLY respond with a Yes or a No")
if (answer1 === 'Y' || Yes || yes || y) {console.log('you may preceed the the entrant door of City Hall\n there you will find a note, follow its instuctions perfectly')}
else {console.log ("I am sorry you do not wqnt to play/n you can always change your mind, I will be here"), process.exit}

console.log ("you find the note sitting on a numerical key pad.\nThe note is simple, \"You will have 3 chances to put this code in correctly\n Code 1234")
let doorcode = await code(1234);
  let count = 0
    if (doorCode === 1234){
      console.log("enter")
    } 
  else{while (count<4){console.log("You've had three tries/n You are not serious, go home to mother dear."), process.exit}
  let count = count + 1


}
 
  }
   


//below is text to be added when debugging above has 



//creating rooms and player: classes, groups and arrays; week 2 objects method, slide 2- and OsJs slide 9 = definition 

//Satchel is where you'll find what player has picked up 
class Satchel {constructor(){}}

//creating rooms
class anteChamber{
  constructor(darkHall, brightHall, stairs, sign,door1, door2){
    this.darkHall = darkHall;
    this.brightHall = brightHall;
    this.stairs = stairs;
    this.sign = sign;
    this.door1 = door1;
    this.door2 = door2;
  }
}
//objects player must pick up
class grabIt{
  constructor(stick, hammer){
    this.stick = stick;
    this.hammer = hammer;
  }
}
//Objects player can pickup but must leave there
class moveableObjects{
  constructor(spiders)
  {this.spiders = spiders;
  }
}
class dropped{constructor(stick, hammer)
  {this.stick=stick;
  this.hammer=hammer;
  }
}
//
start();
async function start() {
  const welcomeMessage = `It’s a dark damp night and you are on the road out in front of 182 Main St.\n and you swear you heard a soft whisper.\nYou think maybe that was just in your head. \nYou need to decide, Do you really want to continue.?`;
  
  let answer = await ask(welcomeMessage);
  
  
  let userName = await ask("What is your name?");
  
  //if yes lets start the game
  if (answer === "yes" || answer === "y")
  console.log ("Lets go.")

    //console.log(` `)
    console.log(`Ok, ${userName}, Let us begin.\nHead for the front door of City Hall right behind you.`
    );

  while (answer !== "exit") {
    answer = await ask(">_ ");
  }
  
  let sign = {
  description: "The code to enter is 1234.\nEnter at your own risk. ",
  read: () => {
  return this.description
  }
  }
  
  
  //if (doorCode !== 1234){
  //console.log("The sign says \"Welcome to City Hall.\n To enter you must input this code ",1,2,3,4," in the, keypad, below.")
  //} 
  if (answer !== "yes", )   
  
  console.log("There is a sign on the door that reads.\n To enter you must input this code 12345, in the keypad below.")
  console.log("You have three tries to get it right.\n If you fail you die.")
  }else{
  console.log("You have entered the Entrance Hall, you have three choices where to go.\n To the left is a nice sunny lit hallway with people working in their offices.\n to the right is a dark dreary hallway with cobwebs covering the entrance.\n Straight ahead is a huge marble staircase that has been roped off with a sign that reads AUTHORIZED PERSONNEL ONLY.\n What way will you choose?")
  let doorCode = await ask(description);
  let count = 0
  console.log("The sign says \"Welcome to City Hall.\n To enter you must input this code ",1,2,3,4," in the, keypad, below.")
  if (doorCode === 12345){console.log("enter")
    } 
  else{while (count<4){console.log("You've had three tries/n You are not serious, go home to mother dear."), process.exit}
  let count = count + 1
  
  //entering first rm

  }
//creating rooms and player: week
  console.log("You have entered the Antechamber you have three choices where to go.\n To the left is a nice sunny lit hallway with people working in their offices.\n to the right is a dark dreary hallway with cobwebs covering the entrance.\n Straight ahead is a huge marble staircase that has been roped off with a sign that reads AUTHORIZED PERSONNEL ONLY.\n Which way will you choose?/n Left, Right or straight/n Meanwhile, you heard the door lock behind you")
  //function lockDoor {}
  
direction; await.ask("left, right or straight")
  let (left === brightHall, right === darkHall, straight === stairs)
if (left) {console.log("you are standing at the entrance to the sunny lit hallway/n you hear people working, but you remember/n It was dark outside, so where is the sun coming from?, /n DO YOU ENTER/n Yes or No?")}

console.log("Inside the dark hallway is a door that leads to the basement. At the bottom of the stairs the room opens up to reveal a table to right with a hammer. Deeper into the room you see a set of glowing green eyes that keep blinking out in the corner.   ")

console.log("Straight ahead is the staircase you jump over the sign that says AUTHORIZED PERSONNEL ONLY and make your way up the stairs to the second floor.\nAt the top of the stairs there is another long hallway with many doors, but there is a door on the left that catches your eye, inside you find the door has lead you into an office with a large desk in one corner with two chairs in front.\nIn the opposite corner you see a cart that used to house a mini bar but almost everything has been tipped over and broken.\n A bottle of Scotch is the only thing remaining.  ")

//creating rooms and player: 
class Satchel{ 
  constructor(weapon1){
     this.weapon1 = weapon1;
  }
}
class antechamber{
  constructor(darkHall, brightHall, stairs, sign, inventory){
    this.darkHall = darkHall;
    this.brightHall = brightHall;
    this.stairs = stairs;
    this.sign = sign;
    this.inventory = inventory;
  }
}
class action{
    constructor(read, take, drop, open, move, climb, enter, out, jump, listen, right, left, forward, back, fight, kill){
      this.read = read;
      this.take = take;
      this.drop = drop;
      this.open = open;
      this.move = move;
      this.climb = climb;
      this.enter = enter;
      this.out = out;
      this.jump = jump;
      this.listen = listen;
      this.right = right;
      this.left = left;
      this.forward = forward;
      this.back = back;
      this.fight = fight;
      this.kill = kill;

    }
  }
  if (command === inventory || command === i || command === 'take inventory');

//describe(){
// return
//}
//let myRoom = new Room("")

//console.log(myRoom.describe())   
 // )}



// put in or remove from satchel; week 2 slide 12 - 
if (drop === stick ||drop === hammer){push}
if (grabIt === stick ||drop === hammer) {console.log('good move'), satchel.push
}
else( ) => {console.log ('you might need that stick for later\n I am just saying all it takes is to spellout /n stick /n or /n hammer')
}

//start ()
//Self explanitory
console.log("welcome to Nick's Jack's Likely Unfinished Game\n \n");

console.log("Have the Time Of Your Life!!");

let anteChamber = ["stairCase", "darkHall", "brightHall", "sign"]
;
    
let study = ["books", "spiders", "redCarpet", "door", "door"];
    let sachel = [""]

//from here out its stuff we had readyf to go...

//    if (code === 12345) {start()}
    
  //  console.log ('Success! welcome'/ ${userName} 'to city hall on all hallows eve')
    
    //else console goodbye 
    //{process.out} 
    //The first room
  
    //console.log(
     // "See the entrance door to City Hall?\n There is a note there, read that note and respond Immediately\n You will have three three (3!) tries to get it correctly\n \n \nThe note sitting on a key reads\n  \n  \nWelcome",
     // $(answer),
     // "the code is 12345"
    
  
     //process.stdin('data', (count) =>{})
     //if count = 4
   
    // if (code == 12345) {
      // start();
     
   
     //cponsole.log("Success! welcome, ${userName} to city hall on all hallows eve");
     //else console goodbye
     //{process.out}
     //console.log ("Lets go.")
     //
     //console.log(` `)
     //console.log(
      // `Ok, ${userName}, Let us begin.\nHead for the front door at City Hall right behind you. HURRY!`
     
    
   //let orderArr = process.argv.slice(2);
   
   //orderArr.forEach((items) => {
   //orderTotal += menu[items];
   //});
     //console.log(
       //"There is a note on the door that reads.\n To enter you must input this code"
     
     
     
     //useful functions 
   
     // pickUp and drop functions :push, pull, slice, trim. look in week 2; arrays
   //pickUp
   //process.stdin.once('data', (pickedUp)=>{pickedUp.toString()})
   //if (pickedUp) {console.log('smart move')}
   
   //drop item
   
   //function dropIt() {pop()
   //  console.log(player.inventory.indexOf())
   //  player.inventory.splice (player.inventory.indexOf(dropItem) )
   
   //process.stdin.once('data', (pickedUp)=>{pickedUp.toString()})
     //if (player) pickedUp =  true {}
     
   //drop item
   //function dropIt{dropItem){
     //console.log(player.invetory.indexOf())
     //player.inventory.splice (player.inventory.indexOf(dropItem) )
   //}
   
     //class Room {
     //constructor(description, inventory, left, right, straight, back);
     // this.description = description;
     // this.inventory = inventory;
     //this.left = left;
     //this.right = right;
     //this.straight = straight;
     //this.back = back;
   
     //describe(){
     // return
     //}
     //let myRoom = new Room("")
   
     //console.log(myRoom.describe())
   
     //let orderArr = process.argv.slice(2);
   
     //orderArr.forEach((items) => {
     //orderTotal += menu[items];
     //});
